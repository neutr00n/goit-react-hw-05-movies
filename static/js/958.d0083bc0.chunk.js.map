{"version":3,"file":"static/js/958.d0083bc0.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","helpers/api/moviesAPI.js","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/AdditInform/AdditInform.styled.jsx","components/AdditInform/AdditInform.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 85vh;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { Box } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Box>\n      <Oval\n        height={180}\n        width={180}\n        color=\"#4fa94d\"\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </Box>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  api_key: '193a1318aa83a5b49d1c16448163261b',\n});\n\nexport async function fetchMovies(period) {\n  const response = await axios.get(`/trending/movie/${period}?${searchParams}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByID(id) {\n  const response = await axios.get(`/movie/${id}?${searchParams}`);\n  return response.data;\n}\n\nexport async function fetchActorsById(id) {\n  const response = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return response.data;\n}\n\nexport async function fetchMoviesBySearch(value) {\n  const response = await axios.get(\n    `/search/movie?${searchParams}&query=${value}`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: flex;\n`;\n\nexport const Poster = styled.img`\n  border-radius: 8px;\n  width: 300px;\n`;\n\nexport const FilmInfoWrap = styled.div`\n  margin-left: 24px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const InfoTitle = styled.b`\n  display: block;\n  margin-bottom: 10px;\n\n  font-size: 18px;\n`;\n\nexport const MovieDescr = styled.p`\n  margin-bottom: 20px;\n\n  font-size: 18px;\n  line-height: 1.2;\n`;\n\nexport const RaitingWrap = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  align-items: baseline;\n`;\n\nexport const RaitingTitle = styled.b`\n  font-size: 18px;\n`;\n\nexport const RaitingDescr = styled.p`\n  margin-left: 10px;\n\n  font-size: 18px;\n  line-height: 1.2;\n`;\n","import {\n  Box,\n  Poster,\n  FilmInfoWrap,\n  Title,\n  InfoTitle,\n  MovieDescr,\n  RaitingWrap,\n  RaitingTitle,\n  RaitingDescr,\n} from './MovieInfo.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieInfo = ({\n  movie: {\n    poster_path,\n    original_title,\n    vote_average,\n    release_date,\n    overview,\n    genres,\n  },\n}) => {\n  const releaseYear = release_date.slice(0, 4);\n  const score = ((vote_average * 100) / 10).toFixed(2);\n  const filmGenres = genres.map(genre => genre.name).join(', ');\n\n  const imgUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n    : 'https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg';\n\n  return (\n    <Box>\n      <Poster src={imgUrl} alt={`${original_title} poster`} />\n      <FilmInfoWrap>\n        <Title>\n          {original_title} ({releaseYear})\n        </Title>\n        <InfoTitle>Overview</InfoTitle>\n        <MovieDescr>{overview}</MovieDescr>\n        <RaitingWrap>\n          <RaitingTitle>User score:</RaitingTitle>\n          <RaitingDescr>{score}%</RaitingDescr>\n        </RaitingWrap>\n        <InfoTitle>Genres</InfoTitle>\n        <MovieDescr>{filmGenres}</MovieDescr>\n      </FilmInfoWrap>\n    </Box>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    release_date: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n\nexport const Wrap = styled.div`\n  padding: 10px;\n`;\n\nexport const NavigLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 10px;\n\n  font-weight: 600;\n  color: #fff;\n\n  border: 1px solid black;\n  border-radius: 8px;\n  transition: background-color 200ms linear;\n\n  &.active {\n    color: #0d17a7;\n    background-color: #777777;\n    box-shadow: 0px 5px 5px 0px rgba(35, 33, 33, 0.5) inset;\n    border-radius: 8px;\n  }\n\n  :hover:not(.active),\n  :focus:not(.active) {\n    background-color: #0d17a7;\n  }\n\n  :nth-of-type(2) {\n    margin-left: 10px;\n  }\n`;\n","import { Box, Wrap, NavigLink } from './AdditInform.styled';\nimport PropTypes from 'prop-types';\n\nexport const AdditInform = ({ location }) => {\n  return (\n    <Box>\n      <h2>Additional information</h2>\n      <Wrap>\n        <NavigLink to=\"cast\" state={{ from: location }}>\n          Cast\n        </NavigLink>\n        <NavigLink to=\"reviews\" state={{ from: location }}>\n          Reviews\n        </NavigLink>\n      </Wrap>\n    </Box>\n  );\n};\n\nAdditInform.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavigLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 10px;\n  padding: 5px;\n\n  font-weight: 600;\n  color: #fff;\n  background-color: #777777;\n  box-shadow: 0px 5px 5px 0px rgba(35, 33, 33, 0.5) inset;\n\n  border: 1px solid black;\n  border-radius: 8px;\n  transition: background-color 200ms linear;\n\n  :hover:not(.active),\n  :focus:not(.active) {\n    background-color: #0d17a7;\n  }\n`;\n","import { NavigLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return <NavigLink to={to}>{children}</NavigLink>;\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMoviesByID } from '../helpers/api/moviesAPI';\nimport { MovieInfo } from '../components/MovieInfo/MovieInfo';\nimport { AdditInform } from '../components/AdditInform/AdditInform';\nimport { Loader } from '../components/Loader/Loader';\nimport { BackLink } from '../components/BackLink/BackLink';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    fetchMoviesByID(movieId)\n      .then(mov => {\n        setMovie(mov);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(error => {\n        setStatus(STATUS.REJECTED);\n        throw new Error(error.message);\n      });\n  }, [movieId]);\n\n  if (status === STATUS.RESOLVED) {\n    return (\n      <>\n        <BackLink to={backLinkHref}>Go back</BackLink>\n        <MovieInfo movie={movie} />\n        <AdditInform location={backLinkHref} />\n        <Outlet />\n      </>\n    );\n  }\n\n  if (status === STATUS.PENDING) {\n    return <Loader />;\n  }\n};\n\nexport default MovieDetails;\n"],"names":["Box","styled","Loader","height","width","color","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","axios","searchParams","URLSearchParams","api_key","fetchMovies","period","response","data","results","fetchMoviesByID","id","fetchActorsById","cast","fetchReviewsById","fetchMoviesBySearch","value","Poster","FilmInfoWrap","Title","InfoTitle","MovieDescr","RaitingWrap","RaitingTitle","RaitingDescr","MovieInfo","movie","poster_path","original_title","vote_average","release_date","overview","genres","releaseYear","slice","score","toFixed","filmGenres","map","genre","name","join","imgUrl","src","alt","Wrap","NavigLink","NavLink","AdditInform","location","to","state","from","BackLink","children","STATUS","useState","setMovie","status","setStatus","movieId","useParams","backLinkHref","useLocation","useEffect","then","mov","catch","error","Error","message"],"sourceRoot":""}