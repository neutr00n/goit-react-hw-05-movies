{"version":3,"file":"static/js/276.d3ac58f4.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsItem/ReviewsItem.styled.jsx","components/ReviewsItem/ReviewsItem.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","helpers/api/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 85vh;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { Box } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Box>\n      <Oval\n        height={180}\n        width={180}\n        color=\"#4fa94d\"\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  border-radius: 8px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.7);\n  overflow: hidden;\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: flex;\n  padding: 10px;\n  background-color: #6cdceb;\n`;\n\nexport const UserInfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 120px;\n  max-width: 120px;\n`;\n\nexport const UserName = styled.p`\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 16px;\n`;\n\nexport const UserRaiting = styled.p`\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n\nexport const CreatedDate = styled.p`\n  margin-top: auto;\n  font-size: 12px;\n`;\n\nexport const Content = styled.p`\n  margin-left: 20px;\n  font-size: 16px;\n`;\n","import {\n  Box,\n  UserInfoBox,\n  UserName,\n  CreatedDate,\n  UserRaiting,\n  Content,\n} from './ReviewsItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const ReviewsItem = ({ author, content, created, rating }) => {\n  const createdDate = new Date(created).toLocaleDateString();\n  return (\n    <Box>\n      <UserInfoBox>\n        <UserName>{author}</UserName>\n        <UserRaiting>Raiting: {rating ?? 0}</UserRaiting>\n        <CreatedDate>{createdDate}</CreatedDate>\n      </UserInfoBox>\n\n      <Content>{content}</Content>\n    </Box>\n  );\n};\n\nReviewsItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  created: PropTypes.string.isRequired,\n};\n","import { List, Item } from './ReviewsList.styled';\nimport { ReviewsItem } from '../ReviewsItem/ReviewsItem';\nimport PropTypes from 'prop-types';\n\nexport const ReviewsList = ({ items }) => {\n  return (\n    <List>\n      {items.map(\n        ({ id, author, content, created_at, author_details: { rating } }) => (\n          <Item key={id}>\n            <ReviewsItem\n              author={author}\n              content={content}\n              created={created_at}\n              rating={rating}\n            />\n          </Item>\n        )\n      )}\n    </List>\n  );\n};\n\nReviewsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from '../../helpers/api/moviesAPI';\nimport { ReviewsList } from '../ReviewsList/ReviewsList';\nimport { Loader } from '../Loader/Loader';\nimport { NotFound } from '../NotFound/NotFound';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Reviews = () => {\n  const [reviews, setReview] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        setStatus(STATUS.PENDING);\n\n        const { results } = await fetchReviewsById(movieId);\n        setReview(results);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        throw new Error(error.message);\n      }\n    }\n    getData();\n  }, [movieId]);\n\n  if (status === STATUS.PENDING) {\n    return <Loader />;\n  }\n\n  if (reviews.length === 0) {\n    return <NotFound>We don't have any reviews for this movie</NotFound>;\n  }\n\n  return <ReviewsList items={reviews} />;\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  api_key: '193a1318aa83a5b49d1c16448163261b',\n});\n\nexport async function fetchMovies(period) {\n  const response = await axios.get(`/trending/movie/${period}?${searchParams}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByID(id) {\n  const response = await axios.get(`/movie/${id}?${searchParams}`);\n  return response.data;\n}\n\nexport async function fetchActorsById(id) {\n  const response = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return response.data;\n}\n\nexport async function fetchMoviesBySearch(value) {\n  const response = await axios.get(\n    `/search/movie?${searchParams}&query=${value}`\n  );\n  return response.data;\n}\n"],"names":["Box","styled","Loader","height","width","color","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","List","Item","UserInfoBox","UserName","UserRaiting","CreatedDate","Content","ReviewsItem","author","content","created","rating","createdDate","Date","toLocaleDateString","ReviewsList","items","map","id","created_at","author_details","STATUS","useState","reviews","setReview","status","setStatus","movieId","useParams","useEffect","fetchReviewsById","results","Error","message","getData","length","NotFound","axios","searchParams","URLSearchParams","api_key","fetchMovies","period","response","data","fetchMoviesByID","fetchActorsById","cast","fetchMoviesBySearch","value"],"sourceRoot":""}