{"version":3,"file":"static/js/3.7db4a091.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","helpers/api/moviesAPI.js","components/MovieForm/MovieForm.styled.jsx","components/MovieForm/MovieForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 85vh;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { Box } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Box>\n      <Oval\n        height={180}\n        width={180}\n        color=\"#4fa94d\"\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavigLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 10px;\n  background-color: #332f2f;\n  flex-grow: 1;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  text-align: center;\n\n  font-size: 16px;\n  color: #6cdceb;\n`;\n\nexport const Raiting = styled.b`\n  display: inline-block;\n\n  font-size: 14px;\n  color: #6cdceb;\n`;\n\nexport const RaitingDesrip = styled.p`\n  display: inline-block;\n  margin-left: 8px;\n  padding: 2px 8px;\n\n  font-size: 14px;\n  color: #332f2f;\n  background-color: #5fe6b9;\n  border-radius: 4px;\n`;\nexport const Img = styled.img`\n  height: 400px;\n`;\n","import {\n  NavigLink,\n  Box,\n  Title,\n  Raiting,\n  RaitingDesrip,\n  Img,\n} from './MoviesItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesItem = ({ id, title, raiting, poster, location }) => {\n  const imgUrl = poster\n    ? `https://image.tmdb.org/t/p/w300/${poster}`\n    : 'https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg';\n\n  return (\n    <NavigLink to={`/movies/${id}`} state={{ from: location }}>\n      <Img src={imgUrl} alt={`${title} poster`} />\n      <Box>\n        <Title>{title}</Title>\n        <div>\n          <Raiting>Raiting:</Raiting>\n          <RaitingDesrip>{raiting.toFixed(2)}</RaitingDesrip>\n        </div>\n      </Box>\n    </NavigLink>\n  );\n};\n\nMoviesItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  raiting: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n  location: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 15px * (5 - 1)) / 5);\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 5px 5px 3px 0px rgba(0, 0, 0, 0.5);\n  transition: scale 200ms linear;\n\n  &:hover,\n  &:focus {\n    scale: 1.04;\n  }\n`;\n","import { MoviesItem } from '../MoviesItem/MoviesItem';\nimport { List, Item } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ items, location }) => {\n  return (\n    <List>\n      {items.map(({ id, original_title, vote_average, poster_path }) => (\n        <Item key={id}>\n          <MoviesItem\n            id={id}\n            title={original_title}\n            poster={poster_path}\n            raiting={vote_average}\n            location={location}\n          />\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  api_key: '193a1318aa83a5b49d1c16448163261b',\n});\n\nexport async function fetchMovies(period) {\n  const response = await axios.get(`/trending/movie/${period}?${searchParams}`);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByID(id) {\n  const response = await axios.get(`/movie/${id}?${searchParams}`);\n  return response.data;\n}\n\nexport async function fetchActorsById(id) {\n  const response = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return response.data.cast;\n}\n\nexport async function fetchReviewsById(id) {\n  const response = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return response.data;\n}\n\nexport async function fetchMoviesBySearch(value) {\n  const response = await axios.get(\n    `/search/movie?${searchParams}&query=${value}`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 5px 20px 5px 40px;\n\n  width: 350px;\n  height: 35px;\n\n  font-size: 16px;\n  background-color: #6cdceb;\n\n  border: 1px solid #111321;\n  border-radius: 20px;\n  border: none;\n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 10px;\n\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n`;\n","import { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { Form, Wrapper, Input, Btn } from './MovieForm.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieForm = ({ handleSearchValue }) => {\n  const [value, setValue] = useState('');\n\n  const handleInputValue = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n\n    const searchValue = evt.target.search.value.trim();\n    const searchParams = searchValue !== '' ? searchValue : [];\n\n    const normalizeSearchValue = encodeURIComponent(searchParams.toLowerCase());\n\n    handleSearchValue({ query: normalizeSearchValue });\n\n    setValue('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Wrapper>\n        <Btn type=\"submit\">\n          <BsSearch />\n        </Btn>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          value={value}\n          placeholder=\"Search...\"\n          onChange={handleInputValue}\n        />\n      </Wrapper>\n    </Form>\n  );\n};\n\nMovieForm.propTypes = {\n  handleSearchValue: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySearch } from '../helpers/api/moviesAPI';\nimport { MovieForm } from '../components/MovieForm/MovieForm';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\n\nimport { Loader } from '../components/Loader/Loader';\nimport { NotFound } from 'components/NotFound/NotFound';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        setStatus(STATUS.PENDING);\n        const { results } = await fetchMoviesBySearch(query);\n        setMovies(results);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        throw new Error(error.message);\n      }\n    }\n    getData();\n  }, [query]);\n\n  return (\n    <>\n      <MovieForm handleSearchValue={setSearchParams} />\n      <MoviesList items={movies} location={location} />\n      {movies.length === 0 && status === STATUS.RESOLVED && (\n        <NotFound>We don't have any movies for this request</NotFound>\n      )}\n      {status === STATUS.PENDING && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Box","styled","Loader","height","width","color","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","NavigLink","NavLink","Title","Raiting","RaitingDesrip","Img","MoviesItem","id","title","raiting","poster","location","imgUrl","to","state","from","src","alt","toFixed","List","Item","MoviesList","items","map","original_title","vote_average","poster_path","axios","searchParams","URLSearchParams","api_key","fetchMovies","period","response","data","results","fetchMoviesByID","fetchActorsById","cast","fetchReviewsById","fetchMoviesBySearch","value","Form","Wrapper","Input","Btn","MovieForm","handleSearchValue","useState","setValue","onSubmit","evt","preventDefault","searchValue","target","search","trim","normalizeSearchValue","encodeURIComponent","toLowerCase","query","type","name","placeholder","onChange","STATUS","movies","setMovies","status","setStatus","useSearchParams","setSearchParams","useLocation","get","useEffect","Error","message","getData","length","NotFound"],"sourceRoot":""}